---
import { t } from 'i18next'
import { LanguageSelector } from 'astro-i18next/components'
import ThemeToggler from './ThemeToggler.astro'

const activeLink = link => Astro.url.pathname === link
const navigation = [
  { name: t('articles'), href: '/blog', icon: 'article.svg' },
  { name: t('projects'), href: 'projects', icon: 'coding.svg' },
  { name: t('aboutMe'), href: 'me', icon: 'resume.svg' }
]
---

<nav class="sticky top-0 bg-gray-100 dark:bg-zinc-900 dark:border-neutral-700 z-10">
  <div class="max-w-screen-md mx-auto px-2 sm:px-6 lg:px-8 py-2">
    <div class="relative flex items-center justify-between">
      <a class="flex items-center gap-2 text-black dark:text-white text-sm font-bold hover:underline hover:decoration-slate-400" href="#" aria-current={activeLink('/') ? 'page' : undefined}>
        <img class="w-9 h-9 rounded-full bg-gray-300 dark:bg-neutral-700" src="/img/logo.png" alt="Logo" />
        Jhorman Rus
      </a>
      <div class="flex-1 flex items-center justify-center sm:items-stretch">
        <div id="navigation" class="flex space-x-2 text-sm text-gray-400 uppercase">
          {navigation.map(item => (
            <a class="flex items-center gap-2 px-3 py-2 hover:underline" href={`#${item.href}`}>
              <img class="w-5 h-5" src={`/svg/${item.icon}`} alt={item.name} />
              <>{item.name}</>
            </a>
          ))}
        </div>
      </div>
      <div class="flex items-center gap-2">
        <ThemeToggler />
        <LanguageSelector showFlag={true} />
      </div>
    </div>
  </div>
</nav>

<script>
  window.addEventListener('scroll', function () {
    const navigation = document.getElementById('navigation')
    const fragments = document.querySelectorAll('section[id]')
    for (let i = 0; i < fragments.length; i++) {
      const fragment = fragments[i]
      const link = navigation.getElementsByTagName('a')[i]
      const rect = fragment.getBoundingClientRect()
      if (rect.top <= 0 && rect.bottom > 0) {
        link.classList.add('active')
      } else {
        link.classList.remove('active')
      }
    }
  })
</script>

<style>
  .active {
    @apply text-black dark:text-white underline decoration-teal-600 decoration-2;
  }
</style>
