---
import { t } from 'i18next'
import ThemeToggler from './ThemeToggler.astro'
import LanguageSwitcher from './LanguageSwitcher.astro'

const activeLink = (link: string) => Astro.url.pathname === link

const navigation = [
  {
    name: t('projects'),
    href: 'projects',
    color: 'emerald'
  },
  {
    name: t('aboutMe'),
    href: 'me',
    color: 'orchid'
  }
  // {
  //   name: t('articles'),
  //   href: '/blog',
  //   color: 'mimosa'
  // }
]

const colorVariants: Record<string, string> = {
  orchid: '[&.active]:text-orchid [&.active]:bg-orchid/10 decoration-orchid',
  emerald: '[&.active]:text-emerald [&.active]:bg-emerald/10 decoration-emerald',
  mimosa: '[&.active]:text-mimosa [&.active]:bg-mimosa/10 decoration-mimosa'
}
---

<nav class="w-full max-w-screen-md sticky top-0 bg-white dark:bg-zinc z-20 px-2 py-4 sm:px-6 lg:px-8 mt-[-4rem]">
  <div class='w-16 h-16 relative'>
    <div class="absolute bottom-9 w-64 h-64" style={{ transform: 'var(--avatar-image-transform)' }}>
      <img class='w-full h-full rounded-[37%_63%_55%_45%/30%_41%_59%_70%] grayscale' src="/img/profile.jfif" alt="profile" />
    </div>
  </div>
  <div class="flex items-center justify-between">
    <!-- <a class="text-black dark:text-white text-sm font-bold" href="#" aria-current={activeLink('/') ? 'page' : undefined}>
      <img class="w-9 h-9 rounded-full bg-gray dark:bg-neutral" src="/img/logo.png" alt="Logo" />
      Jhorman Rus
    </a> -->
    <ul id="navigation" class="flex items-center gap-2 text-gray dark:text-gray font-bold">
      {navigation.map(item => (
        <li>
          <a class={colorVariants[item.color]} href={`#${item.href}`}>
            <>{item.name}</>
          </a>
        </li>
      ))}
    </ul>
    <div class="flex items-center gap-2">
      <ThemeToggler />
      <LanguageSwitcher />
    </div>
  </div>
</nav>

<script>
  window.addEventListener('scroll', function () {
    const navigation = document.getElementById('navigation')
    const fragments = document.querySelectorAll('section[id]')
    for (let i = 0; i < fragments.length; i++) {
      const fragment = fragments[i]
      const link = navigation.getElementsByTagName('a')[i]
      const rect = fragment.getBoundingClientRect()
      if (rect.top <= 0 && rect.bottom > 0) {
        link.classList.add('active')
      } else {
        link.classList.remove('active')
      }
    }
  })

  window.addEventListener('scroll', function () {
    const fromScale = 1
    const toScale = 36 / 64
    const fromX = 0
    const toX = 2 / 16

    const scrollY = 116 - window.scrollY

    let scale = (scrollY * (fromScale - toScale)) / 116 + toScale
    scale = clamp(scale, fromScale, toScale)

    let x = (scrollY * (fromX - toX)) / 116 + toX
    x = clamp(x, fromX, toX)

    setProperty(
      '--avatar-image-transform',
      `translate3d(${x}rem, 0, 0) scale(${scale})`
    )
  }, { passive: true })

  function clamp(number, a, b) {
    const min = Math.min(a, b)
    const max = Math.max(a, b)
    return Math.min(Math.max(number, min), max)
  }

  function setProperty(property, value) {
    document.documentElement.style.setProperty(property, value)
  }
</script>

<style>
  a {
    @apply flex items-center gap-2 p-3 rounded-xl;
  }
  a:hover {
    @apply hover:underline decoration-[3px];
  }
</style>
