---
import { localizePath } from 'astro-i18next'
import i18next from 'i18next'
import iso6991 from 'iso-639-1'

const supportedLanguages = i18next.languages
const currentLanguage = i18next.language
const { pathname } = Astro.url
---

<div class="relative inline-block text-left">
  <button id="menu-button" class="w-12 h-12 rounded-2xl text-blue bg-blue/20 dark:bg-blue/10 hover:bg-blue/30 dark:hover:bg-blue/20 border-b border-blue/20 shadow-lg shadow-blue/10 p-3" type="button" title="Toggle theme">
    <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 512 512">
      <path d="m478.33 433.6-90-218a22 22 0 0 0-40.67 0l-90 218a22 22 0 1 0 40.67 16.79L316.66 406h102.67l18.33 44.39A22 22 0 0 0 458 464a22 22 0 0 0 20.32-30.4ZM334.83 362 368 281.65 401.17 362Zm-66.99-19.08a22 22 0 0 0-4.89-30.7c-.2-.15-15-11.13-36.49-34.73 39.65-53.68 62.11-114.75 71.27-143.49H330a22 22 0 0 0 0-44H214V70a22 22 0 0 0-44 0v20H54a22 22 0 0 0 0 44h197.25c-9.52 26.95-27.05 69.5-53.79 108.36-31.41-41.68-43.08-68.65-43.17-68.87a22 22 0 0 0-40.58 17c.58 1.38 14.55 34.23 52.86 83.93.92 1.19 1.83 2.35 2.74 3.51-39.24 44.35-77.74 71.86-93.85 80.74a22 22 0 1 0 21.07 38.63c2.16-1.18 48.6-26.89 101.63-85.59 22.52 24.08 38 35.44 38.93 36.1a22 22 0 0 0 30.75-4.9Z"/>
    </svg>
  </button>

  <div id="dropdown-menu" class="leaving ease-in-out duration-150 absolute right-0 z-10 mt-2 w-24 origin-top-right rounded-xl bg-white dark:bg-zinc shadow-lg ring-1 ring-black dark:ring-neutral ring-opacity-5 outline-none" role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1">
    <div class="p-1" role="none">
      {
        supportedLanguages.map(language => {
          const value = localizePath(pathname, language)
          const nativeName = iso6991.getNativeName(language)
          return (
            <a href={value} class="block px-4 py-2 text-sm" class:list={{ active: language === currentLanguage }} role="menuitem" tabindex="-1">
              {nativeName}
            </a>
          )
        })
      }
    </div>
  </div>
</div>

<style>
  .entering {
    @apply opacity-100 scale-100;
  }
  .leaving {
    @apply opacity-0 scale-95 invisible;
  }
  .active {
    @apply bg-purple/5 dark:bg-purple/30 rounded-lg;
  }
  a:hover {
    @apply bg-purple/10 dark:bg-purple/40 rounded-lg;
  }
</style>

<script>
  const menuButton = document.getElementById('menu-button') as HTMLButtonElement
  const dropdownMenu = document.getElementById('dropdown-menu') as HTMLDivElement

  menuButton?.addEventListener('click', () => {
    const expanded = menuButton.getAttribute('aria-expanded') === 'true'
    menuButton.setAttribute('aria-expanded', expanded ? 'false' : 'true')

    dropdownMenu?.classList.toggle('leaving')
    dropdownMenu?.classList.toggle('entering')
  })

  document.addEventListener('click', (e) => {
    if (!dropdownMenu.contains(e.target) && !menuButton.contains(e.target)) {
      menuButton.setAttribute('aria-expanded', 'false')
      dropdownMenu?.classList.add('leaving')
      dropdownMenu?.classList.remove('entering')
    }
  })
</script>
