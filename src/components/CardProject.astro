---
import { t } from 'i18next'
const { project, reverse } = Astro.props

const response = await fetch(`https://api.github.com/repos/${project.github_name}`)
const repository = await response.json()

const colorVariants: Record<string, string> = {
  red: 'before:bg-red/20',
  blue: 'before:bg-blue/20',
  orchid: 'before:bg-orchid/20',
  emerald: 'before:bg-emerald/20',
  mimosa: 'before:bg-mimosa/20',
  purple: 'before:bg-purple/20',
  orange: 'before:bg-orange/20'
}
---

<div class='flex items-center gap-10' class:list={{ 'flex-row-reverse': reverse }}>
  {project.images.length > 0 && (
    <div class="img flex-1 relative m-4 z-[-1]" class:list={[colorVariants[project.color]]}>
      <img class="w-full aspect-square object-cover rounded-2xl shadow-lg" src={project.images[0]} alt="desc" draggable="false" />
    </div>
  )}
  <div class='flex-1 flex flex-col'>
    <h3 class="text-md font-bold">{project.name}</h3>
    <p class="text-sm flex-grow">{repository?.description}</p>
    <ul class="flex flex-wrap gap-2 text-xs text-gray">
      {repository?.topics.map((topic: string) => (
        <li>#{topic}</li>
      ))}
    </ul>
    <div class="flex gap-4 mt-2 text-sm">
      <a href={'repository?.html_url'} target="_blank" rel="noreferrer">
        {t('source')}
      </a>
      {project.demo && (
        <a href={'repository?.homepage'} target="_blank" rel="noreferrer">
          Demo
        </a>
      )}
      {project.npm && (
        <a href={project.npm} target="_blank" rel="noreferrer">
          <img class="h-4 w-4" src="/svg/npm.svg" alt="npm" />
          npm
        </a>
      )}
    </div>
  </div>
</div>

<style>
  .img::before {
    @apply content-[''] w-[110%] h-full;
    @apply absolute inset-x-[-5%] z-[-1];
    @apply rounded-2xl rotate-3;
  }
  a {
    @apply flex items-center gap-2 p-3;
  }
  a:hover {
    @apply rounded-xl bg-navy/10 text-navy;
  }
</style>
