---
import { Image } from 'astro:assets'
import { t } from 'i18next'
import Option from './Option.astro'
const { project } = Astro.props

const response = await fetch(`https://api.github.com/repos/${project.github_name}`)
const repository = await response.json()
---

<Option>
  {project.images.length > 0 && (
    <div class="img rel b:cyan-50/.1:before bg:cyan-50/.1:before m:16 z:-1">
      <Image class="square obj:cover r:24 rotate(-1deg) w:full" src={project.images[0]} alt={project.name} width="80" height="80" draggable="false" loading="eager" />
    </div>
  )}
  <div class='flex flex:1|1|0% flex:col p:16 gap:4'>
    <h3 class="f:20 f:bold">{project.name}</h3>
    <p class="f:18 fg:gray-20 flex-grow:1">{repository?.description}</p>
    <!-- <ul class="flex f:12 fg:gray-50 flex:wrap gap:8">
      {repository?.topics.map((topic: string) => (
        <li>#{topic}</li>
      ))}
    </ul> -->
    <!-- <div class="flex {bg:cyan/.1;f:cyan;r:12}>a:hover f:14 gap:16 mt:8">
      <a href={'repository?.html_url'} target="_blank" rel="noreferrer">
        {t('source')}
      </a>
      {project.demo && (
        <a href={'repository?.homepage'} target="_blank" rel="noreferrer">
          Demo
        </a>
      )}
      {project.npm && (
        <a href={project.npm} target="_blank" rel="noreferrer">
          <img class="h:16 w:16" src="/svg/npm.svg" alt="npm" />
          npm
        </a>
      )}
    </div> -->
  </div>
</Option>

<style>
  .img::before {
    content: '';
    width: 110%;
    height: 100%;
    position: absolute;
    border-radius: 24px;
    transform: rotate(3deg);
    border-bottom-width: 1px;
    z-index: -1;
    left: -5%;
    right: -5%;
  }
  .img>img {
    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  }
  a {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 12px;
  }
</style>
